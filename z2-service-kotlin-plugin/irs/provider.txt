  CLASS CLASS name:TestServiceProvider modality:FINAL visibility:public superTypes:[foo.bar.TestService; hu.simplexion.z2.service.runtime.ServiceProvider]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.TestServiceProvider
    CONSTRUCTOR visibility:public <> () returnType:foo.bar.TestServiceProvider [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:TestServiceProvider modality:FINAL visibility:public superTypes:[foo.bar.TestService; hu.simplexion.z2.service.runtime.ServiceProvider]'

    FUN name:dispatch visibility:public modality:OPEN <> ($this:foo.bar.TestServiceProvider, funName:kotlin.String, payload:hu.simplexion.z2.commons.protobuf.ProtoMessage, context:hu.simplexion.z2.service.runtime.ServiceContext, response:hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder) returnType:kotlin.Unit [suspend]
      overridden:
        public open fun dispatch (funName: kotlin.String, payload: hu.simplexion.z2.commons.protobuf.ProtoMessage, context: hu.simplexion.z2.service.runtime.ServiceContext, response: hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder): kotlin.Unit [suspend] declared in hu.simplexion.z2.service.runtime.ServiceProvider
      $this: VALUE_PARAMETER name:<this> type:foo.bar.TestServiceProvider
      VALUE_PARAMETER name:funName index:0 type:kotlin.String
      VALUE_PARAMETER name:payload index:1 type:hu.simplexion.z2.commons.protobuf.ProtoMessage
      VALUE_PARAMETER name:context index:2 type:hu.simplexion.z2.service.runtime.ServiceContext
      VALUE_PARAMETER name:response index:3 type:hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder
      BLOCK_BODY
        BLOCK type=kotlin.Unit origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.String [val]
            GET_VAR 'funName: kotlin.String declared in foo.bar.TestServiceProvider.dispatch' type=kotlin.String origin=null
          WHEN type=kotlin.Unit origin=WHEN
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp_0: kotlin.String [val] declared in foo.bar.TestServiceProvider.dispatch' type=kotlin.String origin=null
                arg1: CONST String type=kotlin.String value="testFun"
              then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                CALL 'public final fun string (fieldNumber: kotlin.Int, value: kotlin.String): hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder declared in hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder' type=hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder origin=null
                  $this: GET_VAR 'response: hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder declared in foo.bar.TestServiceProvider.dispatch' type=hu.simplexion.z2.commons.protobuf.ProtoMessageBuilder origin=null
                  fieldNumber: CONST Int type=kotlin.Int value=1
                  value: CALL 'public final fun testFun (arg1: kotlin.Int, arg2: kotlin.String, serviceContext: hu.simplexion.z2.service.runtime.ServiceContext?): kotlin.String [suspend] declared in foo.bar.TestServiceProvider' type=kotlin.String origin=null
                    $this: GET_VAR '<this>: foo.bar.TestServiceProvider declared in foo.bar.TestServiceProvider.dispatch' type=foo.bar.TestServiceProvider origin=null
                    arg1: CALL 'public final fun int (fieldNumber: kotlin.Int): kotlin.Int declared in hu.simplexion.z2.commons.protobuf.ProtoMessage' type=kotlin.Int origin=null
                      $this: GET_VAR 'payload: hu.simplexion.z2.commons.protobuf.ProtoMessage declared in foo.bar.TestServiceProvider.dispatch' type=hu.simplexion.z2.commons.protobuf.ProtoMessage origin=null
                      fieldNumber: CONST Int type=kotlin.Int value=1
                    arg2: CALL 'public final fun string (fieldNumber: kotlin.Int): kotlin.String declared in hu.simplexion.z2.commons.protobuf.ProtoMessage' type=kotlin.String origin=null
                      $this: GET_VAR 'payload: hu.simplexion.z2.commons.protobuf.ProtoMessage declared in foo.bar.TestServiceProvider.dispatch' type=hu.simplexion.z2.commons.protobuf.ProtoMessage origin=null
                      fieldNumber: CONST Int type=kotlin.Int value=2
                    serviceContext: GET_VAR 'context: hu.simplexion.z2.service.runtime.ServiceContext declared in foo.bar.TestServiceProvider.dispatch' type=hu.simplexion.z2.service.runtime.ServiceContext origin=null

    FUN name:testFun visibility:public modality:FINAL <> ($this:foo.bar.TestServiceProvider, arg1:kotlin.Int, arg2:kotlin.String, serviceContext:hu.simplexion.z2.service.runtime.ServiceContext?) returnType:kotlin.String [suspend]
      $this: VALUE_PARAMETER name:<this> type:foo.bar.TestServiceProvider
      VALUE_PARAMETER name:arg1 index:0 type:kotlin.Int
      VALUE_PARAMETER name:arg2 index:1 type:kotlin.String
      VALUE_PARAMETER name:serviceContext index:2 type:hu.simplexion.z2.service.runtime.ServiceContext?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun testFun (arg1: kotlin.Int, arg2: kotlin.String, serviceContext: hu.simplexion.z2.service.runtime.ServiceContext?): kotlin.String [suspend] declared in foo.bar.TestServiceProvider'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="i:"
            GET_VAR 'arg1: kotlin.Int declared in foo.bar.TestServiceProvider.testFun' type=kotlin.Int origin=null
            CONST String type=kotlin.String value=" s:"
            GET_VAR 'arg2: kotlin.String declared in foo.bar.TestServiceProvider.testFun' type=kotlin.String origin=null
            CONST String type=kotlin.String value=" "
            GET_VAR 'serviceContext: hu.simplexion.z2.service.runtime.ServiceContext? declared in foo.bar.TestServiceProvider.testFun' type=hu.simplexion.z2.service.runtime.ServiceContext? origin=null

    FUN name:testFun visibility:public modality:OPEN <> ($this:foo.bar.TestServiceProvider, arg1:kotlin.Int, arg2:kotlin.String) returnType:kotlin.String [suspend]
      overridden:
        public open fun testFun (arg1: kotlin.Int, arg2: kotlin.String): kotlin.String [suspend] declared in foo.bar.TestService
      $this: VALUE_PARAMETER name:<this> type:foo.bar.TestServiceProvider
      VALUE_PARAMETER name:arg1 index:0 type:kotlin.Int
      VALUE_PARAMETER name:arg2 index:1 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun testFun (arg1: kotlin.Int, arg2: kotlin.String): kotlin.String [suspend] declared in foo.bar.TestServiceProvider'
          CALL 'public final fun testFun (arg1: kotlin.Int, arg2: kotlin.String, serviceContext: hu.simplexion.z2.service.runtime.ServiceContext?): kotlin.String [suspend] declared in foo.bar.TestServiceProvider' type=kotlin.String origin=null
            $this: GET_VAR '<this>: foo.bar.TestServiceProvider declared in foo.bar.TestServiceProvider.testFun' type=foo.bar.TestServiceProvider origin=null
            arg1: GET_VAR 'arg1: kotlin.Int declared in foo.bar.TestServiceProvider.testFun' type=kotlin.Int origin=null
            arg2: GET_VAR 'arg2: kotlin.String declared in foo.bar.TestServiceProvider.testFun' type=kotlin.String origin=null
            serviceContext: CONST Null type=kotlin.Nothing? value=null

    PROPERTY FAKE_OVERRIDE name:serviceContext visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open serviceContext: hu.simplexion.z2.service.runtime.ServiceContext? [val]
      FUN FAKE_OVERRIDE name:<get-serviceContext> visibility:public modality:OPEN <> ($this:hu.simplexion.z2.service.runtime.ServiceProvider) returnType:hu.simplexion.z2.service.runtime.ServiceContext? [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:serviceContext visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-serviceContext> (): hu.simplexion.z2.service.runtime.ServiceContext? declared in hu.simplexion.z2.service.runtime.ServiceProvider
        $this: VALUE_PARAMETER name:<this> type:hu.simplexion.z2.service.runtime.ServiceProvider
